### 사용자 목록 조회
GET {{host_url}}/api/users?page=1&per_page=10&sort_by=-id&email=auth01
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}

### 사용자 목록 조회
GET {{host_url}}/api/users
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}

### 사용자 단건 조회
GET {{host_url}}/api/users/10
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}

### 사용자 생성 요청
POST {{host_url}}/api/users
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{$auth.token("client_credentials")}}

{
  "name": "auth01",
  "email": "auth01@example.net",
  "password": "{{sample_user_password_01}}",
  "password_confirmation": "{{sample_user_password_01}}"
}


### 사용자 정보 업데이트 요청
PUT {{host_url}}/api/users/1001
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}

{
  "name" : "auth02",
  "email": "auth02@example.net",
  "password": "{{sample_user_password_02}}",
  "password_confirmation": "{{sample_user_password_02}}"
}

### 사용자 삭제 요청
DELETE {{host_url}}/api/users/1003
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}

### 토큰을 받아 사용자를 인증 상태로 변경
GET {{host_url}}/api/users/verify/{{sample_user_verification_token}}
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}


### 인증메일 재발송
GET {{host_url}}/api/users/10/resend
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{$auth.token("client_credentials")}}




### 구매자 목록 조회 요청
GET {{host_url}}/api/buyers
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}

### 구매자 단건 조회 요청
GET {{host_url}}/api/buyers/893
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}

###  특정 구매자의 거래 목록 조회
GET {{host_url}}/api/buyers/893/transactions
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}

### 특정 구매자가 구매한 상품 목록 조회
GET {{host_url}}/api/buyers/893/products
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}



### 판매자(보유한 상품 있는 경우) 목록 조회
GET {{host_url}}/api/sellers
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}

### 판매자(보유한 상품 있는 경우) 단건 조회
GET {{host_url}}/api/sellers/237
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}

### 특정 판매자와 거래한 구매자 목록
GET {{host_url}}/api/sellers/237/buyers
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}

### 특정 판매자가 가진 상품 목록조회
GET {{host_url}}/api/sellers/26/products
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}

### 특정 판매자가 가진 상품 등록
POST {{host_url}}/api/sellers/26/products?
    name=뉴 마카롱 세트&
    description=더 다양한 맛&
    quantity=10
Content-Type: multipart/form-data; boundary=WebAppBoundary
Authorization: Bearer {{$auth.token("password_grant")}}

--WebAppBoundary
Content-Disposition: form-data; name="image"; filename="마카롱.jpeg"
Content-Type: image/jpeg

< /Users/cho03/Downloads/마카롱.jpeg
--WebAppBoundary--

### 특정 판매자가 가진 상품 수정
PUT {{host_url}}/api/sellers/26/products/10?
    name=살구캔디&
    description=상큼과즙&
    quantity=1&
    status=available
Content-Type: multipart/form-data; boundary=WebAppBoundary
Authorization: Bearer {{$auth.token("password_grant")}}

--WebAppBoundary
Content-Disposition: form-data; name="image"; filename="살구캔디.jpeg"
Content-Type: image/jpeg

< /Users/cho03/Downloads/살구캔디.jpeg
--WebAppBoundary--

### 특정 판매자가 가진 상품 삭제
DELETE {{host_url}}/api/sellers/237/products/1019
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}

### 특정 판매자의 거래 목록
GET {{host_url}}/api/sellers/26/transactions
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}



### 카테고리 목록조회 요청
GET {{host_url}}/api/categories?page=2&per_page=10
Authorization: Bearer {{$auth.token("client_credentials")}}

### 카테고리 단건 조회
GET {{host_url}}/api/categories/2030
Authorization: Bearer {{$auth.token("client_credentials")}}

### 카테고리 생성
POST {{host_url}}/api/categories
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}

{
  "name" : "식빵",
  "description" : "식빵류"
}

### 카테고리 수정
PUT {{host_url}}/api/categories/2036
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}

{
  "name" : "쿠키",
  "description" : "쿠키류"
}

### 카테고리 삭제 요청
DELETE {{host_url}}/api/categories/2037
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}

### 특정 카테고리에 속하는 상품 목록 조회
GET {{host_url}}/api/categories/10/products
Accept: application/json
Authorization: Bearer {{$auth.token("client_credentials")}}



### 상품 목록 조회
GET {{host_url}}/api/products
Accept: application/json
Authorization: Bearer {{$auth.token("client_credentials")}}

### 상품 단건 조회
GET {{host_url}}/api/products/10
Accept: application/json
Authorization: Bearer {{$auth.token("client_credentials")}}

### 특정 상품에 대한 구매자 목록
GET {{host_url}}/api/products/10/buyers
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}

### 특정 상품이 속한 카테고리 목록조회
GET {{host_url}}/api/products/10/categories
Accept: application/json
Authorization: Bearer {{$auth.token("client_credentials")}}

### 상품-카테고리 연결 추가
PUT {{host_url}}/api/products/10/categories/10
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}

### 상품-카테고리 연결 삭제
DELETE {{host_url}}/api/products/10/categories/11
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}

### 특정 상품의 거래 목록조회
GET {{host_url}}/api/products/10/transactions
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}

### 특정 상품 거래 체결
POST {{host_url}}/api/products/10/buyers/10/transactions
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}

{
  "quantity" : 1
}



### 거래 목록 조회
GET {{host_url}}/api/transactions
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}

### 거래 단건 조회
GET {{host_url}}/api/transactions/40
Accept: application/json
Authorization: Bearer {{$auth.token("password_grant")}}




